name: Build and Push Docker Image

on:
  push:
    branches:
      - develop
      - release
      - main

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch enough history to compare changes

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if package.json version has changed
        id: version_check
        run: |
          git diff HEAD^ HEAD -- package.json | grep '"version":' || echo "No version change"
        continue-on-error: true

      - name: Extract new version from package.json
        id: extract_version
        if: steps.version_check.outcome == 'success'
        run: |
          NEW_VERSION=$(jq -r '.version' package.json)
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "New version is ${NEW_VERSION}"

      - name: Build and push Docker image
        if: steps.version_check.outcome == 'success'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/martakisalex/vite-react-ts-boilerplate-beta:latest
            ghcr.io/martakisalex/vite-react-ts-boilerplate-beta:${{ env.NEW_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
