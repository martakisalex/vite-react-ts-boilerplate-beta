name: Docker Image CI

on:
  push:
    branches:
      - "main"
      - "develop"
      - "release/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Extract version from package.json
      id: get_version
      run: |
        VERSION=$(jq -r '.version' package.json)
        echo "v$VERSION" > version.txt

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Delete existing Docker image tag if it exists
      env:
        VERSION: $(cat version.txt)
      run: |
        IMAGE="ghcr.io/${{ github.repository }}"
        
        # Fetch the image manifest digest for the specific version tag
        DIGEST=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.oci.image.manifest.v1+json" \
                "https://ghcr.io/v2/${{ github.repository }}/manifests/$VERSION" \
                | jq -r '.config.digest')
        
        if [ -n "$DIGEST" ]; then
          # Delete the manifest using the digest
          curl -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               "https://ghcr.io/v2/${{ github.repository }}/manifests/$DIGEST"
        else
          echo "No existing image with tag $VERSION found. Skipping delete."
        fi

    - name: Build the Docker image
      run: |
        VERSION=$(cat version.txt)
        docker build . --file Dockerfile --tag ghcr.io/${{ github.repository }}:$VERSION --tag ghcr.io/${{ github.repository }}:latest

    - name: Push the Docker image
      run: |
        VERSION=$(cat version.txt)
        docker push ghcr.io/${{ github.repository }}:$VERSION
        docker push ghcr.io/${{ github.repository }}:latest
