name: Source Code Protection

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  validate-src-modifications:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check branch naming and src modifications
        id: check
        run: |
          # Define valid branch prefixes
          valid_prefixes=("major/" "feat/" "fix/" "hotfix/" "refactor/" "test/" "style/" "perf/")
          
          # Get the branch name
          branch_name="${{ github.head_ref }}"

          # Check if the branch has a valid prefix
          is_valid_prefix=false
          for prefix in "${valid_prefixes[@]}"; do
            if [[ "$branch_name" == "$prefix"* ]]; then
              is_valid_prefix=true
              break
            fi
          done

          # Check for modifications in the src/ directory
          src_modified=false
          if git diff --name-only origin/${{ github.base_ref }} | grep -q "^src/"; then
            src_modified=true
          fi

          # If src is modified and the branch prefix is invalid, fail the check
          if [ "$src_modified" = true ] && [ "$is_valid_prefix" = false ]; then
            echo "::set-output name=fail::true"
          else
            echo "::set-output name=fail::false"
          fi

      - name: Fail if invalid branch with src changes
        if: steps.check.outputs.fail == 'true'
        run: |
          echo "Error: Source files have been modified without a valid branch prefix."
          echo "To revert changes in 'src/' directory, run:"
          echo "  git checkout origin/${{ github.base_ref }} -- src/"
          exit 1
