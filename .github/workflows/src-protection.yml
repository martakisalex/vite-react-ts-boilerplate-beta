name: Source Code Protection

on:
  pull_request:
    branches:
      - develop
      - release
      - main
  push:
    branches:
      - release

jobs:
  check_source_code_modification:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history for accurate diff

      - name: Fetch latest base and head branches
        run: |
          # Debugging: Output base and head branch information
          echo "Base branch: ${{ github.base_ref }}"
          echo "Head branch: ${{ github.head_ref }}"
          
          # Fetch the base branch and head branch for accurate diffing
          git fetch origin ${{ github.base_ref }} ${{ github.head_ref }}

      - name: Check if source code was modified in src/ and branch name is valid
        run: |
          branch_name="${{ github.head_ref }}"
          target_branch="${{ github.base_ref }}"

          # Define valid branch prefixes for source code changes
          valid_prefixes=("major/" "feat/" "fix/" "hotfix/" "refactor/" "test/" "style/")

          # Debug: List available branches and recent commits for context
          echo "Available branches and commits:"
          git branch -a
          git log -n 5 --oneline

          # Check if any source files in src/ were changed
          source_files_changed=$(git diff --name-only origin/${{ github.base_ref }} origin/${{ github.head_ref }} | grep -E '^src/')

          # Debug: Show which files are detected as modified
          echo "Modified files in src/:"
          echo "$source_files_changed"

          # Check if the branch has a valid prefix for source code changes
          is_valid_prefix=false
          for prefix in "${valid_prefixes[@]}"; do
            if [[ "$branch_name" == "$prefix"* ]]; then
              is_valid_prefix=true
              break
            fi
          done

          # Fail if src/ code was modified but branch name is not allowed
          if [[ -n "$source_files_changed" && "$is_valid_prefix" == false ]]; then
            echo "Error: Modifications to src/ are only allowed on branches with prefixes: ${valid_prefixes[*]}."
            exit 1
          else
            echo "Branch '$branch_name' is valid for src/ changes, or no src/ files were modified."
          fi
