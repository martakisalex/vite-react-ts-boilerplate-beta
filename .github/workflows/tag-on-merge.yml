name: Auto Tag from JSON Version

on:
  push:
    branches:
      - main
      - develop
      - release

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Read the version from package.json
      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "Version in package.json: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      # Step 3: Increment the version
      - name: Increment version
        id: increment_version
        run: |
          # Separate major, minor, and patch numbers
          IFS='.' read -r -a VERSION_PARTS <<< "${{ env.version }}"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          # Increment patch version
          PATCH=$((PATCH + 1))
          
          # Construct new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      # Step 4: Update the version in package.json
      - name: Update version in package.json
        run: |
          jq ".version = \"${{ env.new_version }}\"" package.json > temp.json && mv temp.json package.json
          
          # Commit the updated package.json with the new version
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "Bump version to ${{ env.new_version }}"
          git push origin HEAD:${{ github.ref }}

      # Step 5: Create and push the new tag
      - name: Push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "v${{ env.new_version }}"
          git push origin "v${{ env.new_version }}"
